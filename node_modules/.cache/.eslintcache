[{"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/index.js":"1","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/App.js":"2","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/reportWebVitals.js":"3","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/About.js":"4","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Research.js":"5","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Classes.js":"6","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Students.js":"7","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/CV.js":"8"},{"size":535,"mtime":1672525549908,"results":"9","hashOfConfig":"10"},{"size":2775,"mtime":1690735838137,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1672525549908,"results":"12","hashOfConfig":"10"},{"size":1232,"mtime":1690147621118,"results":"13","hashOfConfig":"10"},{"size":3988,"mtime":1691337799944,"results":"14","hashOfConfig":"10"},{"size":713,"mtime":1690237633025,"results":"15","hashOfConfig":"10"},{"size":1739,"mtime":1690737103706,"results":"16","hashOfConfig":"10"},{"size":898,"mtime":1690740158165,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"tuskg4",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/index.js",[],[],[],"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/App.js",["45","46","47","48","49","50","51","52","53","54","55","56","57"],[],"import './App.scss';\nimport book from './Quandles.jpg';\nimport { useState } from 'react';\nimport profile_img from './mohamed_profile.jpg';\nimport About from './About';\nimport Research from './Research';\nimport Classes from './Classes';\nimport Students from './Students';\nimport CV from './CV';\n\nimport {\n  Container, Row, Col, Nav, Navbar, Card\n} from 'react-bootstrap';\n\nfunction getPage(page){\n  if(page == 'about') return <About/>;\n  else if(page == 'research') return <Research/>;\n  else if(page == 'classes') return <Classes/>;\n  else if(page == 'students') return <Students/>;\n  else if(page == 'CV') return <CV/>;\n  else return \"\";\n}\n\nfunction App() {\n  const [page, setPage] = useState(<About/>);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={3} xl={3} xxl={3}>\n            <Card>\n              <Card.Img className='profile-img' variant=\"top\" src={profile_img} alt=\"profile picture of Mohamed Elhamdadi\"></Card.Img>\n              <Card.Body>\n                <Card.Title>Mohamed Elhamdadi</Card.Title>\n                <Card.Text>Professor of Mathematics</Card.Text>\n                <Card.Link href=\"http://math.usf.edu/\">Department of Mathematics and Statistics</Card.Link>\n                <br/>\n                <Card.Link href=\"http://usf.edu/\">University of South Florida</Card.Link>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={12} lg={6} xl={6} xxl={6}>\n            <Row>\n              <Col className=\"text-center\">\n                <a className=\"header-link\" href=\"#\" onClick={() => setPage(getPage('about'))}>Home</a>\n                <a className=\"header-link\" href=\"#\" onClick={() => setPage(getPage('research'))}>Research &amp; Publications</a>\n                <a className=\"header-link\" href=\"#\" onClick={() => setPage(getPage('classes'))}>Classes</a>\n                <a className=\"header-link\" href=\"#\" onClick={() => setPage(getPage('students'))}>Postdocs &amp; Students</a>\n                <a className=\"header-link\" href=\"#\" onClick={() => setPage(getPage('CV'))}>CV</a>\n              </Col>\n            </Row>\n            <div className='scroll'>\n            {page}\n            </div>\n            \n          </Col>\n          <Col className='text-center' xs={12} sm={12} md={12} lg={3} xl={3} xxl={3}>\n            <br/>\n            <p>Check out my book</p>\n              <img src={book} width='80%' />\n              <br/>\n              <a target=\"_\" href=\"http://bookstore.ams.org/stml-74\">on AMS</a>\n              <br/>\n              <a target=\"_\" href=\"https://www.amazon.com/Quandles-Introduction-Student-Mathematical-Library/dp/1470422131\">on Amazon</a>\n          </Col>\n        </Row>\n        \n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/reportWebVitals.js",[],[],"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/About.js",[],[],"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Research.js",["58","59"],[],"import { useState, useEffect } from 'react';\n// import $ from 'jquery'\nimport publications from './publications.json';\n\n// function arxiv_search({all, author, title, abstrct, journal_ref}) {\n//     var baseUrl = \"http://export.arxiv.org/api/query?search_query=\";\n//     var first = true;\n    \n//     if (author) {\n// \tif (!first) {\n// \t    baseUrl += '+AND+';\n// \t}\n// \tbaseUrl += \"au:\" + author;\n// \tfirst = false;\n//     }\n    \n//     if (title) {\n// \tif (!first) {\n// \t    baseUrl += '+AND+';\n// \t}\n// \tbaseUrl += \"ti:\" + title;\n// \tfirst = false;\n//     }\n    \n//     if (abstrct) {\n// \tif (!first) {\n// \t    baseUrl += '+AND+';\n// \t}\n// \tbaseUrl += \"abs:\" + abstrct;\n// \tfirst = false;\n//     }\n    \n//     if (all) {\n// \tif (!first) {\n// \t    baseUrl += '+AND+';\n// \t}\n// \tbaseUrl += \"all:\" + all;\n//     }\n//     baseUrl += '&max_results=30'\n\n//     console.log(baseUrl)\n\n//     var deferred = $.Deferred();\n//     $.ajax({\n//         url: baseUrl,\n//         type: \"get\",\n//         crossDomain: true,\n//         headers: {\n//             'Accept': 'application/json'\n//         },\n//         beforeSend: function(xhr){\n//                 xhr.withCredentials = true;\n//         },\n//         dataType: \"xml\",\n//         success: function(xml) {\n// \t    var entry = [];\n// \t    $(xml).find('entry').each(function (index) {\n// \t\tvar id = $(this).find('id').text();\n// \t\tvar pub_date = $(this).find('published').text();\n// \t\tvar title = $(this).find('title').text();\n// \t\tvar summary = $(this).find('summary').text();\n// \t\tvar authors = [];\n// \t\t$(this).find('author').each(function (index) {\n// \t\t    authors.push($(this).text());\n// \t\t});\n\t\t\n// \t\tentry.push({'title': title,\n// \t\t\t    'link': id,\n// \t\t\t    'summary': summary,\n// \t\t\t    'date': pub_date,\n// \t\t\t    'authors': authors\n// \t\t\t   });\n// \t    });\n\t    \n// \t    deferred.resolve(entry);\n//         },\n//         error: function(status) {\n//             console.log(\"request error \" + status + \" for url: \"+baseUrl);\n//         }\n//     });\n//     return deferred.promise();\n// }\n\nfunction Research(){\n    // const [posts, setPosts] = useState([]);\n\n    // useEffect(() => {\n    //     arxiv_search({author:'Elhamdadi+Mohamed'}).done(\n    //         res => {\n    //             let data = res.sort((a,b) => new Date(b.date)-new Date(a.date))\n\n    //             setPosts(data.map(d => {\n    //                 return (\n    //                     <>\n    //                         <li>\n    //                             <h6>{d.authors.join(',  ')}. <b>{d.title}</b></h6>\n    //                             <a target=\"_\" href={d.link}>Link to article</a>\n    //                             <p></p>\n    //                             <h6><b>Abstract:</b> {d.summary.replace(/otimes/g,'x').replace(/rightarrow/g,'->').replace(/mathk/g,'').replace(/mathbb/g,'').replace(/mathbf/g,'').replace(/alpha/g,'a').replace(/beta/g,'b').replace(/\\\\/g,'').replace(/\\$/g,'').replace(/\\{/g,'').replace(/\\}/g,'').replace(/\\[/g,'').replace(/\\]/g,'')}</h6>\n    //                         </li>\n    //                     </>\n    //                 );\n    //             }))\n    //         }\n                \n    //     )\n    // }, [])\n\n    return (\n        <>\n            <ol>{publications.map(d => {\n                return (\n                    <>\n                        <li>\n                            <h6>{d.authors.join(',  ')}. <b>{d.title}</b></h6>\n                            <a target=\"_\" href={d.link}>Link to article</a>\n                            <p></p>\n                            <h6><b>Abstract:</b> {d.summary.replace(/otimes/g,'x').replace(/rightarrow/g,'->').replace(/mathk/g,'').replace(/mathbb/g,'').replace(/mathbf/g,'').replace(/alpha/g,'a').replace(/beta/g,'b').replace(/\\\\/g,'').replace(/\\$/g,'').replace(/\\{/g,'').replace(/\\}/g,'').replace(/\\[/g,'').replace(/\\]/g,'')}</h6>\n                        </li>\n                    </>\n                );\n            })}</ol>\n        </>\n    )\n}\n\nexport default Research;","/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Classes.js",[],[],"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/Students.js",[],[],"/Users/mohamedelhamdadi/Documents/website/mohamed-elhamdadi.github.io/src/CV.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":12,"column":24,"nodeType":"62","messageId":"63","endLine":12,"endColumn":27},{"ruleId":"60","severity":1,"message":"64","line":12,"column":29,"nodeType":"62","messageId":"63","endLine":12,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":16,"column":11,"nodeType":"67","messageId":"68","endLine":16,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":17,"column":16,"nodeType":"67","messageId":"68","endLine":17,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":18,"column":16,"nodeType":"67","messageId":"68","endLine":18,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":19,"column":16,"nodeType":"67","messageId":"68","endLine":19,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":20,"column":16,"nodeType":"67","messageId":"68","endLine":20,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":46,"column":17,"nodeType":"71","endLine":46,"endColumn":95},{"ruleId":"69","severity":1,"message":"70","line":47,"column":17,"nodeType":"71","endLine":47,"endColumn":98},{"ruleId":"69","severity":1,"message":"70","line":48,"column":17,"nodeType":"71","endLine":48,"endColumn":97},{"ruleId":"69","severity":1,"message":"70","line":49,"column":17,"nodeType":"71","endLine":49,"endColumn":98},{"ruleId":"69","severity":1,"message":"70","line":50,"column":17,"nodeType":"71","endLine":50,"endColumn":92},{"ruleId":"72","severity":1,"message":"73","line":61,"column":15,"nodeType":"71","endLine":61,"endColumn":45},{"ruleId":"60","severity":1,"message":"74","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":18},{"ruleId":"60","severity":1,"message":"75","line":1,"column":20,"nodeType":"62","messageId":"63","endLine":1,"endColumn":29},"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'useEffect' is defined but never used."]